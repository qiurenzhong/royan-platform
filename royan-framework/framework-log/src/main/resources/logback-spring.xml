<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <include resource="org/springframework/boot/logging/logback/defaults.xml" />
    <include resource="org/springframework/boot/logging/logback/console-appender.xml" />


    <springProperty name="APP_NAME" scope="context" source="spring.application.name"/>
    <springProperty name="LOG_FILE" scope="context" source="logging.file" defaultValue="../logs/${APP_NAME}"/>

    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />

    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} %level ${PID} ${APP_NAME} %X{traceId} [%thread] %logger %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}" />

    <!-- 控制台日志 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <withJansi>true</withJansi>
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 按照每天生成常规日志文件 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>

        <file>${LOG_FILE}/${APP_NAME}.log</file>
        <!-- 基于时间的分包策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE}/${APP_NAME}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!--保留时间,单位:天-->
            <maxHistory>45</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
        </filter>
    </appender>

    <!--日志格式-->
    <appender name="logstashAppender"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder charset="UTF-8" class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp>
                    <timeZone>UTC</timeZone>
                </timestamp>
                <pattern>
                    <pattern>
                        {
                        "app": "${APP_NAME}",
                        "userId":"%X{userId:-}",
                        "traceId": "%X{traceId:-}",
                        "spanId": "%X{spanId:-}",
                        "parent": "%X{spanPid:-}",
                        "thread": "%thread",
                        "sessionId":"%X{sessionId} ",
                        "remoteIP":"%X{remoteIP}",
                        "requestURL":"%X{requestURL}",
                        "serverName":"%X{serverName}",
                        "serverIp":"%X{serverIp}",
                        "timestamp": "%date{\"yyyy-MM-dd HH:mm:ss,SSS\"}",
                        "logLevel": "%level",
                        "thread": "%thread",
                        "className": "%logger{100}",
                        "lineNum": "%line",
                        "message": "%message",
                        "stackTrace": "%exception{1000}"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
        <!--<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
        <!--<pattern>${FILE_LOG_PATTERN}</pattern>-->
        <!--</encoder>-->
        <file>${LOG_FILE}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE}-%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>45</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
    </appender>


    <!--<appender name="KafkaAppender" class="com.github.danielwegener.logback.kafka.KafkaAppender">
        <encoder charset="UTF-8"  class="com.github.danielwegener.logback.kafka.encoding.LayoutKafkaMessageEncoder">
            <layout class="net.logstash.logback.layout.LoggingEventCompositeJsonLayout">
                <providers>
                    <pattern>
                        <pattern>
                            {
                            "appName": "${APP_NAME}",
                            "traceId": "%X{traceId}",
                            "spanId": "%X{spanId}",
                            "pid": "%X{spanPid}",
                            "sessionId":"%X{sessionId} ",
                            "remoteIP":"%X{remoteIP}",
                            "requestURL":"%X{requestURL}",
                            "serverName":"%X{serverName}",
                            "serverIp":"%X{serverIp}",
                            "timestamp": "%date{\"yyyy-MM-dd HH:mm:ss,SSS\"}",
                            "logLevel": "%level",
                            "thread": "%thread",
                            "className": "%class",
                            "lineNum": "%line",
                            "message": "%message",
                            "stackTrace": "%exception{5}"
                            }
                        </pattern>
                    </pattern>
                </providers>
            </layout>
        </encoder>
        <topic>${KAFKA_TOPIC}</topic>
        <keyingStrategy class="com.github.danielwegener.logback.kafka.keying.HostNameKeyingStrategy"/>
        <deliveryStrategy class="com.github.danielwegener.logback.kafka.delivery.AsynchronousDeliveryStrategy"/>
        <producerConfig>bootstrap.servers=${KAFKA_HOST}</producerConfig>
        <producerConfig>metadata.fetch.timeout.ms=100</producerConfig>
    </appender>-->

    <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>1024</queueSize>
        <appender-ref ref="FILE"/>
        <appender-ref ref="logstashAppender"/>
        <!--<appender-ref ref="KafkaAppender"/>-->
    </appender>

    <springProfile name="dev">
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="ASYNC"/>
        </root>
    </springProfile>

    <springProfile name="test">
        <root level="INFO">
            <appender-ref ref="ASYNC"/>
        </root>
    </springProfile>


    <springProfile name="prod">
        <root level="INFO">
            <appender-ref ref="ASYNC"/>
        </root>
    </springProfile>



</configuration>
